language: rust
sudo: false
rust:
    - nightly

addons:
    apt:
        sources:
            - ubuntu-toolchain-r-test
        packages:
            - libcurl4-openssl-dev
            - libelf-dev
            - libdw-dev
            - cmake
            - gcc-5
            - g++-5
            - binutils-dev
            - libiberty-dev
env:
    - CC=gcc-5 CXX=g++-5 RUSTFLAGS='-C link-dead-code'

script:
    - cargo install clippy --force
    - cargo clippy --all -- -D warnings
    - cargo test
    - ls target
    - ls target/debug
    - mkdir build
    - cd build
    - cmake ..
    - make
    - cd bin
    - ./cpp-raw
    - ls target
    - ls target/debug

after_success: |
    # Set up the environment. We need LD_LIBRARY_PATH to include rust libs for
    # the rust tests to execute without cargo.
    export LD_LIBRARY_PATH=/home/travis/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib &&

    # Compile kcov.
    wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
    tar xzf master.tar.gz &&
    cd kcov-master &&
    mkdir build &&
    cd build &&
    cmake .. &&
    make &&
    make install DESTDIR=../../kcov-build &&
    cd ../.. &&
    rm -rf kcov-master &&
    export KCOV=${PWD}/kcov-build/usr/local/bin/kcov &&

    mkdir -p target/cov &&
    export KCOV_OUT=${PWD}/target/cov &&
    export KCOV_INCLUDE=${PWD} &&
    export KCOV_EXCLUDE=${PWD}/test &&
    export KCOV_FLAGS=--verify &&
    export RUN_KCOV="$KCOV --include-pattern=$KCOV_INCLUDE --exclude-pattern=$KCOV_EXCLUDE $KCOV_FLAGS $KCOV_OUT" &&

    # Rust #[test]s.
    echo "####" &&
    ls target &&
    echo "####" &&
    ls target/debug &&
    echo "####" &&
    for file in target/debug/deps/intercom*-????????????????;
    do
        ${RUN_KCOV} "$file";
    done &&

    # Rust compilation. Tests for attribute expansion.
    for file in intercom-attributes/tests/data/*.source.rs;
    do
        CARGO_PKG_NAME="source" ${RUN_KCOV}  rustc --crate-name source --crate-type lib "$file" --out-dir target/test_out -L dependency=target/debug/deps --extern intercom=target/debug/libintercom.rlib --pretty=expanded -Z unstable-options > /dev/null;
    done &&

    # C++ COM client tests. Tests for runtime conversions.
    ( cd build/bin && ${RUN_KCOV} cpp-raw ) &&

    bash <(curl -s https://codecov.io/bash) &&
    echo "Uploaded code coverage"
