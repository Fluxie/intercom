trigger:
- master

strategy:
    matrix:
        Linux_nightly:
            imageName: "ubuntu-16.04"
            rustVersion: nightly
            cmake_generator_opts:
            memcheck: valgrind --error-exitcode=1 --leak-check=full
        Windows_nightly:
            imageName: "vs2017-win2016"
            rustVersion: nightly
            cmake_generator_opts: -DCMAKE_GENERATOR_PLATFORM=x64
            memcheck:
        Linux_stable:
            imageName: "ubuntu-16.04"
            rustVersion: stable
            cmake_generator_opts:
            memcheck: valgrind --error-exitcode=1 --leak-check=full
        Windows_stable:
            imageName: "vs2017-win2016"
            rustVersion: stable
            cmake_generator_opts: -DCMAKE_GENERATOR_PLATFORM=x64
            memcheck:

pool:
  vmImage: $(imageName)

steps:
- script: |
    curl -sSf -o rustup-init.exe https://win.rustup.rs
    rustup-init.exe --default-toolchain $(rustVersion) -y
  displayName: 'Update environment (Windows)'
  condition: and(succeeded(), eq( variables['Agent.OS'], 'Windows_NT' ))

- script: |
    sudo apt-get install valgrind -y
  displayName: 'Update environment (Linux)'
  condition: and(succeeded(), eq( variables['Agent.OS'], 'Linux' ))

- script: |
    rustup -V
    rustup self update
    rustup set profile minimal
    rustup toolchain install $(rustVersion) -c rustfmt -c clippy
    rustup default $(rustVersion)
    cargo -V
    rustc -V
    cargo clippy -V
    cargo fmt -- -V
  displayName: 'Setup environment'

- script: cargo fmt -- --check
  displayName: 'Check style'
  condition: and(succeeded(), eq( variables['rustVersion'], 'nightly' ))

- script: cargo clippy
  displayName: 'Run build'
  condition: and(succeeded(), eq( variables['rustVersion'], 'nightly' ))

- script: cargo test
  displayName: 'Run unit tests'
  condition: and(succeeded(), eq( variables['rustVersion'], 'nightly' ))

- script: |
    mkdir build
    cd build
    cmake .. $(cmake_generator_opts)
    cmake --build .
  displayName: "Build integration tests"

- bash: |
    $(memcheck) build/bin/cpp-raw
    $(memcheck) build/bin/cpp-dl
    $(memcheck) build/bin/cpp-wrapper
  displayName: "Run integration tests"
